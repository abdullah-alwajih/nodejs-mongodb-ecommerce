name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            abdullahalwajih/api-ecommerce
          tags: |
            type=ref,event=branch,pattern={{branch}}
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Setup kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Configure kubectl
        run: |
          mkdir -p $HOME/.kube
          echo "
          apiVersion: v1
          clusters:
          - cluster:
              certificate-authority-data: ${{ secrets.KUBE_CA }}
              server: ${{ secrets.KUBE_SERVER }}
            name: minikube
          contexts:
          - context:
              cluster: minikube
              user: github-action-sa
            name: minikube
          current-context: minikube
          kind: Config
          preferences: {}
          users:
          - name: github-action-sa
            user:
              token: ${{ secrets.KUBE_TOKEN }}
              client-certificate-data: ${{ secrets.KUBE_CLIENT_CERT }}
              client-key-data: ${{ secrets.KUBE_CLIENT_KEY }}
          " > $HOME/.kube/config

      - name: Create configmap.yaml
        run: |
          echo "${{ secrets.CONFIGMAP_YAML }}" > configmap.yaml
          cat configmap.yaml

      - name: Create secret.yaml
        run: |
          echo "${{ secrets.SECRET_YAML }}" > secret.yaml
          cat secret.yaml

      - name: Create deployment.yaml
        run: |
          echo "${{ secrets.DEPLOYMENT_YAML }}" > deployment.yaml
          cat deployment.yaml

      - name: Create service.yaml
        run: |
          echo "${{ secrets.SERVICE_YAML }}" > service.yaml
          cat service.yaml

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f configmap.yaml
          kubectl apply -f secret.yaml
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml

      - name: Update image in Kubernetes
        run: |
          kubectl set image deployment/api-ecommerce-deployment api-ecommerce=abdullahalwajih/api-ecommerce:${{ steps.meta.outputs.sha }}
